name: Test

on:
  pull_request:
    branches: 
      - main
    paths-ignore:
      - '**.md'
      - 'LICENSE'
  workflow_call:
  workflow_dispatch:

env:
  REPO_PATH: "${{ github.workspace }}/${{ github.repository }}"
  DENOPS_PATH: "${{ github.workspace }}/denops.vim"

jobs:
  test:
    name: Test

    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]

    runs-on: ${{ matrix.os }}

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          path: ${{ env.REPO_PATH }}

      - name: Setup Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.32.3 # @denopendabot denoland/deno

      - name: Checkout denops.vim
        uses: actions/checkout@v3
        with:
          repository: "vim-denops/denops.vim"
          path: ${{ env.DENOPS_PATH }}

      - name: Setup Vim
        uses: rhysd/action-setup-vim@v1.2.15
        id: vim
        with:
          version: stable

      - name: Setup Neovim
        uses: rhysd/action-setup-vim@v1.2.15
        id: nvim
        with:
          neovim: true
          version: stable

      - name: Check Vim & Neovim
        run: |
          echo ${DENOPS_TEST_VIM}
          ${DENOPS_TEST_VIM} --version
          echo ${DENOPS_TEST_NVIM}
          ${DENOPS_TEST_NVIM} --version
        env:
          DENOPS_TEST_VIM: ${{ steps.vim.outputs.executable }}
          DENOPS_TEST_NVIM: ${{ steps.nvim.outputs.executable }}

      - name: Cache dependencies
        run: git ls-files | grep -F .ts | xargs -I deno cache {}
        working-directory: ${{ env.REPO_PATH }}

      - name: Test
        run: deno task test --coverage=./coverage
        env:
          DENOPS_TEST_VIM: ${{ steps.vim.outputs.executable }}
          DENOPS_TEST_NVIM: ${{ steps.nvim.outputs.executable }}
          DENOPS_TEST_DENOPS_PATH: ${{ env.DENOPS_PATH }}
        timeout-minutes: 5
        working-directory: ${{ env.REPO_PATH }}

      - name: Create coverage report
        run: deno coverage ./coverage --lcov > ./coverage.lcov

      - name: Upload to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.lcov
